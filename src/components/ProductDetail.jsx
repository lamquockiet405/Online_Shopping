"use client"

import { useState } from "react"
import "../styles/ProductDetail.css"
import { useNavigate } from "react-router-dom"

const ProductDetail = ({ product, onBack, onAddToCart, onBuyNow }) => {
  const navigate = useNavigate();
  const [selectedSize, setSelectedSize] = useState("M")
  const [selectedColor, setSelectedColor] = useState("ƒêen")
  const [quantity, setQuantity] = useState(1)
  const [activeImageIndex, setActiveImageIndex] = useState(0)

  const sizes = ["XS", "S", "M", "L", "XL", "XXL"]
  const colors = [
    { name: "ƒêen", value: "#000000" },
    { name: "Tr·∫Øng", value: "#FFFFFF" },
    { name: "Xanh d∆∞∆°ng", value: "#3B82F6" },
    { name: "ƒê·ªè", value: "#EF4444" },
  ]

  // Mock multiple images for gallery
  const productImages = [
    product?.image || "/placeholder.svg",
    "/placeholder.svg?height=500&width=500&text=Image2",
    "/placeholder.svg?height=500&width=500&text=Image3",
    "/placeholder.svg?height=500&width=500&text=Image4",
  ]

  const formatPrice = (price) => {
    return new Intl.NumberFormat("vi-VN", {
      style: "currency",
      currency: "VND",
    }).format(price)
  }

  const handleAddToCart = () => {
    const productWithOptions = {
      ...product,
      selectedSize,
      selectedColor,
      quantity,
    }
    onAddToCart(productWithOptions)
    alert(`ƒê√£ th√™m ${quantity} ${product.name} v√†o gi·ªè h√†ng!`)
    navigate("/")
  }

  const handleBuyNow = () => {
    if (typeof onBuyNow === "function") {
      const orderInfo = {
        selectedSize,
        selectedColor,
        quantity,
        totalPrice: product.price * quantity,
      }
      onBuyNow(product, orderInfo)
    }
  }

  const handleQuantityChange = (newQuantity) => {
    if (newQuantity >= 1) {
      setQuantity(newQuantity)
    }
  }

  if (!product) {
    return <div>Kh√¥ng t√¨m th·∫•y s·∫£n ph·∫©m</div>
  }

  return (
    <div className="product-detail-page">
      <div className="product-detail-container">
        <div className="product-detail-header">
          <button onClick={onBack} className="back-btn">
            ‚Üê Quay l·∫°i
          </button>
        </div>

        <div className="product-detail-content">
          {/* Product Images */}
          <div className="product-images">
            <div className="main-image">
              <img src={productImages[activeImageIndex] || "/placeholder.svg"} alt={product.name} />
            </div>
            <div className="image-thumbnails">
              {productImages.map((image, index) => (
                <button
                  key={index}
                  onClick={() => setActiveImageIndex(index)}
                  className={`thumbnail ${index === activeImageIndex ? "active" : ""}`}
                >
                  <img src={image || "/placeholder.svg"} alt={`${product.name} ${index + 1}`} />
                </button>
              ))}
            </div>
          </div>

          {/* Product Info */}
          <div className="product-info">
            <div className="product-header">
              <h1>{product.name}</h1>
              {product.rating && (
                <div className="product-rating">
                  <div className="stars">
                    {[...Array(5)].map((_, i) => (
                      <span key={i} className={i < product.rating ? "star filled" : "star"}>
                        ‚≠ê
                      </span>
                    ))}
                  </div>
                  <span className="rating-text">({product.rating}) ‚Ä¢ 127 ƒë√°nh gi√°</span>
                </div>
              )}
            </div>

            <div className="product-price">
              <span className="current-price">{formatPrice(product.price)}</span>
              {product.originalPrice && (
                <>
                  <span className="original-price">{formatPrice(product.originalPrice)}</span>
                  <span className="discount">
                    -{Math.round(((product.originalPrice - product.price) / product.originalPrice) * 100)}%
                  </span>
                </>
              )}
            </div>

            <div className="product-description">
              <h3>M√¥ t·∫£ s·∫£n ph·∫©m</h3>
              <p>
                S·∫£n ph·∫©m ch·∫•t l∆∞·ª£ng cao ƒë∆∞·ª£c l√†m t·ª´ ch·∫•t li·ªáu t·ªët nh·∫•t. Thi·∫øt k·∫ø hi·ªán ƒë·∫°i, ph√π h·ª£p v·ªõi xu h∆∞·ªõng th·ªùi
                trang hi·ªán t·∫°i. D·ªÖ d√†ng ph·ªëi ƒë·ªì v√† s·ª≠ d·ª•ng trong nhi·ªÅu d·ªãp kh√°c nhau.
              </p>
              <ul>
                <li>Ch·∫•t li·ªáu cao c·∫•p, b·ªÅn ƒë·∫πp</li>
                <li>Thi·∫øt k·∫ø th·ªùi trang, hi·ªán ƒë·∫°i</li>
                <li>D·ªÖ d√†ng b·∫£o qu·∫£n v√† gi·∫∑t ·ªßi</li>
                <li>Ph√π h·ª£p v·ªõi nhi·ªÅu d·ªãp kh√°c nhau</li>
              </ul>
            </div>

            {/* Size Selection */}
            <div className="product-options">
              <div className="option-group">
                <h4>K√≠ch th∆∞·ªõc:</h4>
                <div className="size-options">
                  {sizes.map((size) => (
                    <button
                      key={size}
                      onClick={() => setSelectedSize(size)}
                      className={`size-btn ${selectedSize === size ? "selected" : ""}`}
                    >
                      {size}
                    </button>
                  ))}
                </div>
              </div>

              {/* Color Selection */}
              <div className="option-group">
                <h4>M√†u s·∫Øc: {selectedColor}</h4>
                <div className="color-options">
                  {colors.map((color) => (
                    <button
                      key={color.name}
                      onClick={() => setSelectedColor(color.name)}
                      className={`color-btn ${selectedColor === color.name ? "selected" : ""}`}
                      style={{ backgroundColor: color.value }}
                      title={color.name}
                    />
                  ))}
                </div>
              </div>

              {/* Quantity Selection */}
              <div className="option-group">
                <h4>S·ªë l∆∞·ª£ng:</h4>
                <div className="quantity-selector">
                  <button onClick={() => handleQuantityChange(quantity - 1)} className="quantity-btn">
                    ‚àí
                  </button>
                  <span className="quantity-display">{quantity}</span>
                  <button onClick={() => handleQuantityChange(quantity + 1)} className="quantity-btn">
                    +
                  </button>
                </div>
              </div>
            </div>

            {/* Action Buttons */}
            <div className="product-actions">
              <button onClick={handleAddToCart} className="add-to-cart-btn">
                üõí Th√™m v√†o gi·ªè h√†ng
              </button>
              {typeof onBuyNow === "function" && (
                <button onClick={handleBuyNow} className="buy-now-btn">
                  Mua ngay
                </button>
              )}
            </div>

            {/* Additional Info */}
            <div className="additional-info">
              <div className="info-item">
                <span className="info-icon">üöö</span>
                <div>
                  <strong>Mi·ªÖn ph√≠ v·∫≠n chuy·ªÉn</strong>
                  <p>Cho ƒë∆°n h√†ng t·ª´ 500.000ƒë</p>
                </div>
              </div>
              <div className="info-item">
                <span className="info-icon">‚Ü©Ô∏è</span>
                <div>
                  <strong>ƒê·ªïi tr·∫£ d·ªÖ d√†ng</strong>
                  <p>Trong v√≤ng 30 ng√†y</p>
                </div>
              </div>
              <div className="info-item">
                <span className="info-icon">üõ°Ô∏è</span>
                <div>
                  <strong>B·∫£o h√†nh ch·∫•t l∆∞·ª£ng</strong>
                  <p>Cam k·∫øt ch√≠nh h√£ng 100%</p>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  )
}

export default ProductDetail
